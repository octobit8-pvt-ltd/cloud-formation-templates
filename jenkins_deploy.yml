AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for deploying Jenkins on ECS

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to ECS instances
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where ECS cluster will be launched
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs for ECS instances
  JenkinsContainerImage:
    Type: String
    Default: jenkins/jenkins:lts
    Description: Jenkins Docker image to use
  ContainerPort:
    Type: Number
    Default: 8080
    Description: Port to access Jenkins inside the container

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: JenkinsCluster

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: JenkinsTask
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: JenkinsContainer
          Image: !Ref JenkinsContainerImage
          PortMappings:
            - ContainerPort: !Ref ContainerPort

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: JenkinsService
      TaskDefinition: !Ref TaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: ECRPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                Resource: "*"

Outputs:
  JenkinsURL:
    Description: URL for accessing Jenkins
    Value: !Sub "http://${Service.LoadBalancer.LoadBalancerDnsName}:8080"
